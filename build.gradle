// You should not need to edit this file directly.
// Use repositories.gradle and dependencies.gradle instead.

plugins {
    id "java"
    id "maven-publish"
}

java {
    sourceCompatibility = getVersionForMajor(javaSourceVersion)
    targetCompatibility = getVersionForMajor(javaTargetVersion)

    if (generateSourcesJar) {
        withSourcesJar()
    }
    if (generateJavadocJar) {
        withJavadocJar()
    }
}

configurations {
    internal
    implementation.extendsFrom(internal)
}

jar {
    from {
        configurations.internal.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

compileJava { options.encoding = "UTF-8" }
javadoc { options.encoding = "UTF-8" }

repositories {
    mavenCentral()
    maven {
        name = "spigotmc"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype-bungeecord"
        url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        name = "kettlemc"
        url = "https://repo.kettlemc.net/repository/maven-public/"
    }
}

if (spigotVersion) {
    dependencies {
        implementation "org.spigotmc:spigot-api:${spigotVersion}"
    }
}

group projectGroup
version projectVersion

dependencies {
    implementation fileTree(dir: "libs/implementation", include: "*.jar")
    internal fileTree(dir: "libs/internal", include: "*.jar")
    compileOnly "org.jetbrains:annotations:24.0.1"
}

// Use repositories from "repositories.gradle"
if (file("repositories.gradle").exists()) {
    apply from: "repositories.gradle"
}

// Use dependencies from "dependencies.gradle"
if (file("dependencies.gradle").exists()) {
    apply from: "dependencies.gradle"
}

static JavaVersion getVersionForMajor(String version) {
    return JavaVersion.values().find { (it.majorVersion == version) }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components["java"])
            pom {
                name.set("kcommon")
                description.set("Common utils and methods for KettleMC plugins")
                url.set("https://github.com/KettleMC-Network/kCommon")

                licenses {
                    license {
                        name.set("GNU Lesser General Public License v2.1")
                        url.set("https://opensource.org/license/lgpl-2-1/")
                    }
                }

                developers {
                    developer {
                        name.set("LeStegii")
                        url.set("https://github.com/LeStegii")
                    }
                }

            }
            artifactId = "kcommon"
        }
    }

    repositories {
        maven {
            setUrl("https://repo.kettlemc.net/repository/maven-releases/")
            credentials {
                username = System.getenv("repouser")
                password = System.getenv("repopassword")
            }
        }
    }
}
